#!/usr/bin/python3

from gi.repository import GObject

def main() -> None: ...

def main_quit() -> None: ...

class TextMark(GObject.Object): ...

class Widget(GObject.Object):
    def show_all(self) -> None: ...

class Container(Widget):
    def add(self, widget: Widget) -> None: ...

class Bin(Container): ...

class Box(Container):
    def pack_start(self, child: Widget, expand: bool, fill: bool, padding: int) -> None: ...

class Label(Widget):
    def __init__(self, label: str) -> None: ...
    def set_label(self, label: str) -> None: ...

class ScrolledWindow(Bin): ...

class VBox(Box): ...

class Toolbar(Container): ...

class Notebook(Container):
    def append_page(self, child: Widget, tab_label: Widget) -> None: ...
    def set_current_page(self, page_num: int) -> None: ...


class TextView(Container):
    def scroll_to_mark(self, mark: TextMark, within_margin: float, use_align: bool, xalign: float, yalign: float) -> None: ...

class TextIter:
    def get_line(self) -> int: ...

class TextBuffer(GObject.Object):
    def get_start_iter(self) -> TextIter: ...
    def get_end_iter(self) -> TextIter: ...
    def get_iter_at_line(self, line_number: int) -> TextIter: ...


class ToolItem(Bin): ...

class ToolButton(ToolItem):
    def __init__(self, label: str) -> None: ...

class Window(Bin):
    def __init__(self, title: str) -> None: ...
    def set_default_size(self, width: int, height: int) -> None: ...

class ApplicationWindow(Window): ...

class Builder:
    @staticmethod
    def new_from_file(filename: str) -> Builder: ...

    def connect_signals(self, obj: object) -> None: ...
    def get_object(self, id: str) -> GObject.Object | None: ...